<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META Version='1' >
<META App='Access'
Project='acmain9.chm'
FileName='acmthDeleteLinesX'
Feature='acmth'
Handoff='1'
SourceFile='amthv8.rtf'
Tnum='186743'
Piece='1043'
Recycle='N'
>

<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Esempio di metodo DeleteLines, proprietà Lines</TITLE>
<style>@import url(/Office.css);</style>
<link disabled rel="stylesheet" type="text/css" href="/MSOffice.css"></HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">



<P class=RLNSR><B><A NAME="acmthdeletelinesx"></A>Esempio di metodo DeleteLines, proprietà Lines</B></P>



<P class=T>Nell'esempio riportato di seguito viene indicato come eliminare una determinata riga in un modulo.</P>

<PRE class=CT><CODE>Function DeleteWholeLine(strModuleName, strText As String) _
&nbsp;&nbsp;&nbsp;&nbsp; As Boolean
&nbsp;&nbsp;&nbsp; Dim mdl As Module, lngNumLines As Long
&nbsp;&nbsp;&nbsp; Dim lngSLine As Long, lngSCol As Long
&nbsp;&nbsp;&nbsp; Dim lngELine As Long, lngECol As Long
&nbsp;&nbsp;&nbsp; Dim strTemp As String
&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp; On Error GoTo Error_DeleteWholeLine
&nbsp;&nbsp;&nbsp; DoCmd.OpenModule strModuleName
&nbsp;&nbsp;&nbsp; Set mdl = Modules(strModuleName)
&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp; If mdl.Find(strText, lngSLine, lngSCol, lngELine, lngECol) Then
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lngNumLines = Abs(lngELine - lngSLine) + 1
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; strTemp = LTrim$(mdl.<B>Lines</B>(lngSLine, lngNumLines))
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; strTemp = RTrim$(strTemp)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If strTemp = strText Then
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mdl.<B>DeleteLines</B> lngSLine, lngNumLines
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Else
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MsgBox "La riga contiene del testo oltre a '" _
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; strText &amp; "'."
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End If
&nbsp;&nbsp;&nbsp; Else
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MsgBox "Testo '" &amp; strText &amp; "' not found."
&nbsp;&nbsp;&nbsp; End If
&nbsp;&nbsp;&nbsp; DeleteWholeLine = True
&nbsp;&nbsp;&nbsp; 
Exit_DeleteWholeLine:
&nbsp;&nbsp;&nbsp; Exit Function
&nbsp;&nbsp;&nbsp; 
Error_DeleteWholeLine:
&nbsp;&nbsp;&nbsp; MsgBox Err &amp; " :" &amp; Err.Description
&nbsp;&nbsp;&nbsp; DeleteWholeLine = False
&nbsp;&nbsp;&nbsp; Resume Exit_DeleteWholeLine
End Function
</CODE></PRE>

<P class=T>È possibile richiamare questa funzione da una routine come quella riportata di seguito, che ricerca una dichiarazione di costante nel modulo Modulo1 e la elimina.</P>

<PRE class=CT><CODE>Sub EliminaCostantePigreco()
&nbsp;&nbsp;&nbsp; If DeleteWholeLine("Modulo1", "Cost con PiGreco = 3.14") Then
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Debug.Print "Dichiarazione di costante eliminata riuscita."
&nbsp;&nbsp;&nbsp; Else
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Debug.Print " Dichiarazione di costante non eliminata."
&nbsp;&nbsp;&nbsp; End If
End Sub
</CODE></PRE>


<SCRIPT language="VBScript" src="ShowMe_Code.vbs"></SCRIPT>
<SCRIPT language="VBSCRIPT">
Sub HelpPopup (sFile, sID)
Call InitConstants() 
On Error Resume Next
r=oua.HelpPopup(sFile,sID)
If Err<>0 Then Msgbox L_SECURITY_MSG,48,L_TITLE
End Sub
</SCRIPT>

</BODY>
</HTML>
