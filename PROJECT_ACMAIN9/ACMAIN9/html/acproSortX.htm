<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META Version='1' >
<META App='Access'
Project='acmain9.chm'
FileName='acproSortX'
Feature='acpro'
Handoff='1'
SourceFile='acdprox1_1a.rtf'
Tnum='234540'
Piece='1039'
Recycle='Y'
>

<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Esempio di proprietà Sort (MDB)</TITLE>
<style>@import url(/Office.css);</style>
<link disabled rel="stylesheet" type="text/css" href="/MSOffice.css"></HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">



<P class=RLNSR><B><A NAME="acprosortx"></A>Esempio di proprietà Sort (MDB)</B></P>



<P class=T>Nell'esempio riportato di seguito si utilizza la proprietà <B>Sort</B> per impostare il criterio di ordinamento di un oggetto <B>Recordset</B> di tipo dynaset in base a una tabella Ordini. I record contenuti nella variabile del set di record <CODE>rstOrdinato</CODE> verranno ordinati alfabeticamente in base al Paese.</P>

<P class=T>Si noti che innanzitutto si crea un oggetto <B>Recordset</B> di tipo dynaset e si imposta la relativa proprietà <B>Sort</B>, quindi è necessario aprire un secondo oggetto <B>Recordset</B> di tipo dynaset in base al primo. Dal momento che l'impostazione della proprietà <B>Sort</B> del primo oggetto <B>Recordset</B> non influisce sull'ordine dei record in esso contenuti, è necessario creare un secondo oggetto <B>Recordset</B> per vedere i risultati dell'ordinamento.</P>

<PRE class=CT><CODE>Sub OrdinaPerPaese()
&nbsp;&nbsp;&nbsp; Dim dbs As Database
&nbsp;&nbsp;&nbsp; Dim rstOrdini As Recordset, rstOrdinato As Recordset

&nbsp;&nbsp;&nbsp; ' Restituisce il riferimento al database corrente.
&nbsp;&nbsp;&nbsp; Set dbs = CurrentDb
&nbsp;&nbsp;&nbsp; ' Crea un oggetto Recordset di tipo dynaset.
&nbsp;&nbsp;&nbsp; Set rstOrdini = dbs.OpenRecordset("Ordini", dbOpenDynaset)
&nbsp;&nbsp;&nbsp; ' Imposta il criterio di ordinamento.
&nbsp;&nbsp;&nbsp; rstOrdini.<B>Sort</B> = "PaeseDestinatario"
&nbsp;&nbsp;&nbsp; ' Crea un secondo oggetto Recordset di tipo dynaset.
&nbsp;&nbsp;&nbsp; Set rstOrdinato = rstOrdini.OpenRecordset()
&nbsp;&nbsp;&nbsp; ' Esegue le operazioni relative al set di record.
&nbsp;&nbsp;&nbsp; .
&nbsp;&nbsp;&nbsp; .
&nbsp;&nbsp;&nbsp; .
&nbsp;&nbsp;&nbsp; rstOrdini.Close
&nbsp;&nbsp;&nbsp; rstOrdinato.Close
&nbsp;&nbsp;&nbsp; Set dbs = Nothing
End Sub</CODE></PRE>



<P class=NT><B>Suggerimento</B>&nbsp;&nbsp; In molti casi è più efficace creare il secondo oggetto <B>Recordset</B> con le condizioni desiderate in un solo passo. Se si conoscono i dati che si desidera selezionare, è generalmente più efficace creare un oggetto <B>Recordset</B> mediante un'istruzione SQL. Il seguente esempio mostra come è possibile creare un solo oggetto <B>Recordset</B> e ottenere gli stessi risultati riscontrati nell'esempio precedente:</P>

<PRE class=NCT><CODE>Sub CreaRecordsetConSQL()
&nbsp;&nbsp;&nbsp; Dim dbs As Database, rst As Recordset
&nbsp;&nbsp;&nbsp; Dim strSelezione As String

&nbsp;&nbsp;&nbsp; Set dbs = CurrentDb
&nbsp;&nbsp;&nbsp; strSelezione = "SELECT * FROM Ordini ORDER BY PaeseDestinatario;"
&nbsp;&nbsp;&nbsp; Set rst = dbs.OpenRecordset(strSelezione)
&nbsp;&nbsp;&nbsp; rst.MoveLast
&nbsp;&nbsp;&nbsp; MsgBox "Il set di record contiene " &amp; rst.RecordCount &amp; " record."
&nbsp;&nbsp;&nbsp; rst.Close
End Sub</CODE></PRE>


<SCRIPT language="VBScript" src="ShowMe_Code.vbs"></SCRIPT>
<SCRIPT language="VBSCRIPT">
Sub HelpPopup (sFile, sID)
Call InitConstants() 
On Error Resume Next
r=oua.HelpPopup(sFile,sID)
If Err<>0 Then Msgbox L_SECURITY_MSG,48,L_TITLE
End Sub
</SCRIPT>

</BODY>
</HTML>
