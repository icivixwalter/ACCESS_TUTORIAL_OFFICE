<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN">
<HTML>
<HEAD>
<META Version='1' >
<META App='Access'
Project='acmain9.chm'
FileName='acconConvertingAccessBasicCodeToVisualBasic'
Feature='accon'
Handoff='3'
SourceFile='acconnew1.doc'
Tnum='187101'
Piece='1042'
Recycle='N'
>

<OBJECT ID="oua" WIDTH="0" HEIGHT="0"
   CLASSID="CLSID:8936033C-4A50-11D1-98A4-00A0C90F27C6">
</OBJECT>

<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Convertire il codice Access Basic in Visual Basic</TITLE>
<style>@import url(/Office.css);</style>
<link disabled rel="stylesheet" type="text/css" href="/MSOffice.css"></HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="achowhelptopicnotavailables.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="vastmDeclare">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="achowhelptopicnotavailables.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="mdobjConnection">
</OBJECT>
<OBJECT ID="hhobj_4" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="vafctCurDir">
</OBJECT>
<OBJECT ID="hhobj_5" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="achowhelptopicnotavailables.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="mdmthGetChunk">
</OBJECT>
<OBJECT ID="hhobj_6" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="achowhelptopicnotavailables.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="vadatByte">
</OBJECT>
<OBJECT ID="hhobj_7" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="achowhelptopicnotavailables.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="vafctLeft">
</OBJECT>
<OBJECT ID="hhobj_8" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="achowhelptopicnotavailables.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="vafctRight">
</OBJECT>
<OBJECT ID="hhobj_9" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="achowhelptopicnotavailables.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="vaobjErr">
</OBJECT>
<OBJECT ID="hhobj_10" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="achowhelptopicnotavailables.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="daobjField">
</OBJECT>
<OBJECT ID="hhobj_11" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="achowhelptopicnotavailables.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="daobjRecordset">
</OBJECT>
<OBJECT ID="hhobj_12" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="achowhelptopicnotavailables.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="vakeyByVal">
</OBJECT>
<OBJECT ID="hhobj_13" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="achowhelptopicnotavailables.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="vakeyMe">
</OBJECT>
<OBJECT ID="hhobj_14" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="achowhelptopicnotavailables.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="vafctEOF">
</OBJECT>
<OBJECT ID="hhobj_15" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="achowhelptopicnotavailables.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="vafctLoc">
</OBJECT>
<OBJECT ID="hhobj_16" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="achowhelptopicnotavailables.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="vafctFileAttr">
</OBJECT>
<OBJECT ID="hhobj_17" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="achowhelptopicnotavailables.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="vafctLOF">
</OBJECT>
<OBJECT ID="hhobj_18" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="achowhelptopicnotavailables.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="vafctFreeFile">
</OBJECT>
<OBJECT ID="hhobj_19" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="achowhelptopicnotavailables.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="vafctSeek">
</OBJECT>
<OBJECT ID="hhobj_20" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="achowhelptopicnotavailables.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="vafctFormat">
</OBJECT>
<OBJECT ID="hhobj_21" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="achowhelptopicnotavailables.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="vafctIIf">
</OBJECT>
</TD></TR></TABLE>



<H1 class=RH1><A NAME="acconconvertingaccessbasiccodetovisualbasic"></A>Convertire il codice Access Basic in Visual Basic</H1>

<P class=ALNSR>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Font" VALUE="Verdana,8,1">
	<PARAM NAME="Text" VALUE="Text:Vedere anche">
	<PARAM NAME="Flags" VALUE="1,,1">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="acconConvertingAccessBasicCodeToVisualBasicC">
</OBJECT></P>



<P class=T>In Microsoft Access 95 si è sostituito Access Basic, utilizzato nelle versioni 1.<I>x</I> e 2.0 di Microsoft Access, con Visual Basic, Applications Edition. Per molti aspetti Visual Basic è identico ad Access Basic e la maggior parte delle conversioni di codice necessarie viene eseguita automaticamente da Microsoft Access quando si converte il database.</P>

<P class=T>Il processo di conversione tuttavia apporta alcune modifiche al codice che è opportuno tenere presenti. È inoltre necessario apportare personalmente altre modifiche affinché l'applicazione venga eseguita correttamente in Microsoft Access 2000.</P>

<P class=NT><B>Nota</B>&nbsp;&nbsp; L'opzione della riga di comando /<B>runtime</B> non è disponibile nella versione autonoma o in Office Professional Edition di Microsoft Access 2000. È invece disponibile<B> </B>nella versione Office Developer Edition di Microsoft Access 2000.</P>



<P class=RL><B>Chiamata dell'API di Windows</B></P>

<P class=T>Se il codice Access Basic versione 1.<I>x</I> o 2.0 esistente chiama l'<A HREF="javascript:HelpPopup('actip9.hlp','defWindowsAPI');" class="pop">API (Application Programming Interface, interfaccia di programma applicativo) di Windows</A>, può essere necessario modificare queste chiamate quando si converte il database. Le versioni 1.<I>x</I> e 2.0 di Microsoft Access sono applicazioni a 16 bit e vengono eseguite sulle versioni a 16 bit di Windows. Microsoft Access 2000 è un'applicazione a 32 bit eseguita sulle versioni a 32 bit di Windows, ossia sulle piattaforme Windows 95 e Windows NT.</P>

<P class=T>Controllare che tutte le istruzioni <A HREF="JavaScript:hhobj_2.Click()"><B>Declare</B></A> facciano riferimento alle DLL a 32 bit corrette. Le versioni a 32 bit di Windows ad esempio includono la DLL User32.dll che nelle versioni precedenti era denominata User.dll. Per ulteriori informazioni, vedere <A HREF="achowConvertDLL.htm">Convertire codice che richiama una DLL</A>.</P>

<P class=T>I nomi di alcune funzioni dell'API di Windows sono stati modificati. Le funzioni dell'API di Windows a 32 bit inoltre fanno distinzione tra lettere maiuscole e minuscole. Per informazioni di riferimento complete, vedere Microsoft Win32 Software Development Kit.</P>

<P class=RL><B>Alcune proprietà e argomenti opzionali sono rigidamente classificati in tipi</B></P>

<P class=T>Alcune proprietà che nelle versioni precedenti di Microsoft Access restituivano valori di tipo <B>Variant</B> ora restituiscono delle stringhe. Il codice che include queste proprietà viene quindi eseguito più rapidamente. Quando si converte un database da una versione precedente di Microsoft Access in Microsoft Access 2000, è però necessario verificare che questi nuovi valori non restituiscano errori.</P>

<P class=T>Alcuni argomenti opzionali che nelle versioni precedenti di Microsoft Access erano di tipo <B>Variant</B> inoltre vengono ora classificati rigidamente in tipi. I metodi, le proprietà e le funzioni su cui ha effetto questa differenza includono il metodo <B>GoToPage</B> di un oggetto <B>Form</B>, i metodi <B>OpenCurrentDatabase</B>, <B>Echo</B>, <B>Quit</B>, <B>CreateForm</B>, <B>CreateReport</B>, <B>CreateControl</B> e <B>CreateReportControl</B> dell'oggetto <B>Application</B>, la proprietà <B>Column</B> di una casella combinata o di riepilogo e le <A HREF="javascript:HelpPopup('actip9.hlp','defDomainFunction');" class="pop">funzioni di aggregazione sui domini</A>. Se il codice include uno qualsiasi di questi elementi, è opportuno verificare che non vengano restituiti errori durante la conversione del database.</P>

<P class=T>Per controllare gli errori è necessario prima compilare tutto il codice nel database, quindi controllare gli eventuali errori di run-time quando si esegue il codice. Gli errori più probabili sono quelli relativi alla corrispondenza errata tra i tipi o all'utilizzo errato di Null.</P>

<P class=T>È inoltre necessario verificare la presenza di errori invisibili che possono essere stati introdotti nel codice durante la conversione di un database. La proprietà <B>RecordSource</B> di un controllo ad esempio restituiva un valore <B>Variant</B>, mentre ora restituisce una stringa. A differenza di un valore <B>Variant</B>, una stringa non può contenere un valore <B>Null</B>. Il codice di un database convertito che controlla se il valore della proprietà <B>RecordSource</B> è <B>Null</B> non verrà più eseguito correttamente, dato che il valore di <B>RecordSource</B> non sarà mai <B>Null</B>. Nella procedura che segue viene illustrato un esempio di codice che controlla se il valore della proprietà <B>RecordSource</B> di una casella di testo è <B>Null</B>.</P>

<PRE class=CT><CODE>Private Sub Form_Load()
    If IsNull(Me.RecordSource) Then
        Me.Recordsource = "Impiegati"
    End If
End Sub
</CODE></PRE>

<P class=T>In Microsoft Access 2000 la funzione <B>IsNull</B> non restituirà mai <B>True</B> per il valore della proprietà <B>RecordSource</B>. Se la proprietà <B>RecordSource</B> non è già stata impostata nell'esempio precedente, il relativo valore sarà una stringa vuota, il valore restituito dalla funzione <B>IsNull</B> sarà <B>False</B> e la procedura non potrà mai impostare la proprietà <B>RecordSource</B> mediante l'istruzione <B>If...Then</B>.</P>

<P class=T>Per correggere il codice dell'esempio precedente, utilizzare la funzione <B>Len</B>, che verifica la lunghezza della stringa restituita dalla proprietà <B>RecordSource</B> per determinare se è vuota. La riga che segue consente di correggere il codice dell'esempio precedente:</P>

<PRE class=CT><CODE>If Len(Me.RecordSource) = 0 Then
    ' Annotazione procedura.</CODE></PRE>



<P class=RL><B>Modifiche dei moduli</B></P>

<P class=T>Nelle versioni 1.<I>x</I> e 2.0 di Microsoft Access i moduli che contengono le routine generali, non specifiche di un modulo di maschera o report, sono denominati moduli globali. In Microsoft Access 2000 sono invece denominati <A HREF="javascript:HelpPopup('actip9.hlp','defStandardModule');" class="pop">moduli standard</A>.</P>

<P class=T>In Microsoft Access 2000 sono inclusi i <A HREF="javascript:HelpPopup('actip9.hlp','defClassModule');" class="pop">moduli di classe</A>, che possono essere utilizzati per creare oggetti personalizzati. Qualsiasi routine pubblica in un modulo di classe diventa metodo e proprietà di un oggetto personalizzato quando si crea una nuova <A HREF="javascript:HelpPopup('actip9.hlp','defInstance');" class="pop">istanza</A> della classe. I moduli di classe possono essere indipendenti o associati a maschere e a report. Per ulteriori informazioni sui moduli di classe, vedere <A HREF="acconProgrammingFormsReports.htm">Programmare con i moduli di classe</A>.</P>

<P class=RL><B>Funzioni CurrentDb e DBEngine(0)(0)</B></P>

<P class=T>Utilizzare il metodo <A HREF="acmthCurrentDb.htm"><B>CurrentDb</B></A> invece di <CODE>DBEngine(0)(0)</CODE> per restituire una variabile di oggetto <A HREF="JavaScript:hhobj_3.Click()"><B>Connection</B></A> che faccia riferimento al database corrente. La funzione <B>CurrentDb</B> crea un'altra istanza del database corrente, mentre <CODE>DBEngine(0)(0)</CODE> fa riferimento alla copia aperta. L'utilizzo di <CODE>DBEngine(0)(0)</CODE> limita la possibilità di utilizzare più variabili di tipo <B>Database</B> che fanno riferimento al database corrente.</P>

<P class=T>Poiché la sintassi <CODE>DBEngine(0)(0)</CODE> è ancora supportata, il codice non viene modificato durante il processo di conversione. È tuttavia consigliabile apportare questa modifica al codice in modo da evitare possibili conflitti in un ambiente multiutente.</P>

<P class=RL><B>Funzione CurDir</B></P>

<P class=T>La funzione <A HREF="JavaScript:hhobj_4.Click()"><B>CurDir</B></A> si comporta in modo diverso rispetto alle versioni 1.<I>x</I> o 2.0 a causa delle modalità di interazione delle applicazioni con Windows 95. Poiché ciascuna applicazione dispone di una propria cartella corrente, l'impostazione della cartella corrente in Windows 98 effettuata facendo doppio clic su un'icona non ha effetto sulla cartella corrente in Microsoft Access. La funzione <B>CurDir</B> in Microsoft Access 2000 restituisce sempre il percorso corrente.</P>

<P class=RL><B>Assegnazione di un oggetto OLE a una variabile</B></P>

<P class=T>Se si gestiscono <A HREF="javascript:HelpPopup('actip9.hlp','defOLEObject');" class="pop">oggetti OLE</A> o altri dati binari nel codice, è necessario utilizzare una <A HREF="javascript:HelpPopup('actip9.hlp','defArray');" class="pop">matrice</A> di byte per memorizzare i dati binari. Nelle versioni 1.<I>x</I> e 2.0 di Microsoft Access gli oggetti OLE o gli altri dati binari di dimensioni inferiori a 64 K vengono assegnati alle variabili a stringa quando è necessario gestire gli oggetti o i dati nel codice. Anche i dati restituiti dal metodo <A HREF="JavaScript:hhobj_5.Click()"><B>GetChunk</B></A> vengono assegnati alle variabili a stringa. Visual Basic fornisce tuttavia un tipo di dati <A HREF="JavaScript:hhobj_6.Click()"><B>Byte</B></A> e funzioni byte come <A HREF="JavaScript:hhobj_7.Click()"><B>LeftB</B></A> e <A HREF="JavaScript:hhobj_8.Click()"><B>RightB</B></A>. In Microsoft Access 2000 è necessario memorizzare i dati binari in una matrice di byte piuttosto che in una variabile a stringa e utilizzare le funzioni byte per la gestione dei dati.</P>

<P class=RL><B>Dichiarare i canali DDE come Variant o Long</B></P>

<P class=T>Se si utilizza la funzione <A HREF="acfctDDEInitiate.htm"><B>DDEInitiate</B></A> per aprire un canale DDE, è possibile dichiarare la variabile che memorizza il numero del canale, che è un valore di tipo <A HREF="javascript:HelpPopup('actip9.hlp','defLongDataType');" class="pop"><B>Long</B></A>, come valore di tipo <A HREF="javascript:HelpPopup('actip9.hlp','defVariant');" class="pop"><B>Variant</B></A> o <B>Long</B>. Poiché nelle versioni 1.<I>x</I> e 2.0 di Microsoft Access il numero del canale è un valore <A HREF="javascript:HelpPopup('actip9.hlp','defIntegerDataType');" class="pop"><B>Integer</B></A>, sarà necessario modificare tutte le eventuali istruzioni di dichiarazione del codice che creano variabili di tipo <B>Integer</B> per memorizzare il numero del canale.</P>

<P class=RL><B>La conversione delle stringhe non riesce se la stringa contiene un segno di percentuale (%)</B></P>

<P class=T>Non è possibile assegnare una stringa contenente un segno di percentuale a una variabile o a un campo contenente un tipo di dati numerico, come nel seguente esempio:</P>

<PRE class=CT><CODE>Dim intX As Double
    intX = "10"                ' Funziona.
    intX = "10%"            ' Restituisce un errore.</CODE></PRE>



<P class=RL><B>Proprietà hWnd</B></P>

<P class=T>Se si utilizza la proprietà <A HREF="acprohWnd.htm"><B>hWnd</B></A> del codice per passare l'handle di una finestra di una maschera o di un report a una routine di Windows, il valore deve essere passato direttamente alla routine. Non deve pertanto essere assegnato a una variabile. Ad esempio:</P>

<PRE class=CT><CODE>If Not IsZoomed(Screen.ActiveForm.hWnd) Then
    DoCmd.Maximize
EndIf</CODE></PRE>



<P class=T>Nelle versioni 1.<I>x</I> e 2.0 di Microsoft Access la proprietà <B>hWnd</B> di una maschera o di un report è un valore di tipo <B>Integer</B>. In Microsoft Access 2000 invece la proprietà <B>hWnd</B> è un valore di tipo <B>Long</B> che richiede la modifica del codice.</P>

<P class=RL><B>Oggetti di proprietà DAO e oggetti di proprietà di Microsoft Access</B></P>

<P class=T>Non è possibile utilizzare una variabile di oggetto nel codice per fare riferimento a una proprietà <B>Category</B>. La proprietà <B>Category</B> non è più supportata per gli oggetti <A HREF="acobjForm.htm"><B>Form</B></A>, <A HREF="acobjReport.htm"><B>Report</B></A> e <A HREF="acobjControl.htm"><B>Control</B></A>.</P>

<P class=RL><B>Proprietà Parent</B></P>

<P class=T>Se in Microsoft Access 2000 la proprietà <A HREF="acproParent.htm"><B>Parent</B></A> di un <A HREF="javascript:HelpPopup('actip9.hlp','defControl');" class="pop">controllo</A> viene utilizzata nel codice o in un'<A HREF="javascript:HelpPopup('actip9.hlp','defExpression');" class="pop">espressione</A> di una maschera o di un report, restituisce generalmente l'oggetto <B>Form</B> o <B>Report</B> contenente il controllo. Se ad esempio IDCategoria è una <A HREF="javascript:HelpPopup('actip9.hlp','defTextBox');" class="pop">casella di testo</A> sulla maschera Categorie, il codice <CODE>Forms!Categorie!IDCategoria.Parent</CODE> restituisce un riferimento alla maschera Categorie. Questa regola ha due eccezioni: per le <A HREF="javascript:HelpPopup('actip9.hlp','defLabel');" class="pop">etichette</A> allegate, la proprietà <B>Parent</B> ora restituisce il controllo al quale è allegata l'etichetta; per i controlli di un <A HREF="javascript:HelpPopup('actip9.hlp','defOptionGroup');" class="pop">gruppo di opzioni</A>, restituisce il controllo del gruppo di opzioni.</P>

<P class=RL><B>Chiamata del codice nelle creazioni guidate di Microsoft Access</B></P>

<P class=T>Se il codice nelle applicazioni della versione 1.<I>x</I> o 2.0 chiama le routine delle creazioni guidate di Microsoft Access, dopo la conversione dell'applicazione è necessario stabilire un riferimento dall'applicazione al database della creazione guidata che contiene le routine chiamate. Per ulteriori informazioni sui riferimenti, vedere <A HREF="acconSettingReferences.htm">Impostazione dei riferimenti per le librerie dei tipi</A>.</P>

<P class=T>Poiché in Microsoft Access versione 2.0 non esiste alcuna distinzione tra creazioni guidate e librerie, il corrispondente codice pubblico è sempre disponibile per il database corrente. In Microsoft Access 2000 le creazioni guidate e gli altri componenti aggiuntivi non vengono più considerate librerie. Poiché inoltre le creazioni guidate possono variare sensibilmente da una versione di Microsoft Access all'altra, può essere necessario riscrivere parte del codice per adattarlo alle modifiche dopo l'aggiornamento a una nuova versione di Microsoft Access.</P>

<P class=T>Le funzionalità del codice che non è più incluso nelle creazioni guidate di Microsoft Access, come la Composizione automatica, sono state aggiunte in un database di libreria speciale, Utility.mda, fornito con Microsoft Access. Il riferimento a questa libreria viene aggiunto automaticamente quando si converte un database in Microsoft Access 2000.</P>

<P class=RL><B>Impostazione di un riferimento a un database di Microsoft Access</B></P>

<P class=T>Non è possibile impostare un riferimento a un database creato con una versione precedente di Microsoft Access da Microsoft Access 2000. È necessario convertirlo in database di Microsoft Access 2000 (versione 9.0) per poter eseguire questa operazione.</P>

<P class=RL><B>Gestione degli errori di automazione</B></P>

<P class=T>Nelle versioni 1.<I>x</I> e 2.0 di Microsoft Access i <A HREF="javascript:HelpPopup('actip9.hlp','defActiveXComponent');" class="pop">componenti COM</A> che supportano le operazioni di <A HREF="javascript:HelpPopup('actip9.hlp','defOLEAutomation');" class="pop">automazione</A> (precedentemente denominati server di automazione OLE) restituiscono un errore singolo. Visual Basic consente ora a un componente COM di restituire le informazioni specifiche dell'errore che si è verificato. Se i database esistenti includono codice per la gestione di un errore di automazione singolo, può essere necessario aggiornare il codice per gestire gli errori più specifici restituiti dalla nuova versione.</P>

<P class=RL><B>Errori di Microsoft Access e funzione di errore</B></P>

<P class=T>In Microsoft Access 2000 le proprietà dell'oggetto <A HREF="JavaScript:hhobj_9.Click()"><B>Err</B></A> vengono utilizzate per ottenere informazioni sugli errori.</P>

<P class=T>Quando si verifica un errore di Microsoft Access, è possibile ottenere il numero e la descrizione dell'errore mediante le proprietà <B>Number</B> e <B>Description</B> dell'oggetto <B>Err</B>, come illustrato nel seguente esempio:</P>

<PRE class=CT><CODE>Debug.Print Err.Number, Err.Description</CODE></PRE>



<P class=T>Per ottenere informazioni sugli errori di Microsoft Access, Visual Basic o DAO, utilizzare il metodo <A HREF="acmthAccessError.htm"><B>AccessError</B></A>, che consente<B> </B>di ottenere informazioni sugli errori, indipendentemente dal fatto che si siano effettivamente verificati.</P>

<P class=RL><B>Operatori Punto esclamativo (!) e punto (.) nel riferimento ai campi DAO</B></P>

<P class=T>Se è stata utilizzata la sintassi dell'operatore punto (.) nel riferimento a un oggetto <A HREF="JavaScript:hhobj_10.Click()"><B>Field</B></A> di un oggetto <A HREF="JavaScript:hhobj_11.Click()"><B>Recordset</B></A> nelle applicazioni create nelle versioni 1.<I>x</I> o 2.0 di Microsoft Access, è necessario modificare tali riferimenti per utilizzare la sintassi dell'operatore punto esclamativo (!). In alternativa, per continuare a utilizzare la sintassi dell'operatore punto (.) è necessario stabilire un riferimento alla libreria di compatibilità Microsoft DAO 2.5/3.5 nella finestra di dialogo <B>Riferimenti</B>, che viene aperta quando si sceglie <B>Riferimenti</B> dal menu <B>Strumenti</B> in <A HREF="javascript:HelpPopup('actip9.hlp','defDesignView');" class="pop">visualizzazione Struttura</A> del modulo.</P>

<P class=RL><B>Controlli ActiveX convertiti</B></P>

<P class=T>Se l'applicazione contiene dei <A HREF="javascript:HelpPopup('actip9.hlp','defCustomControl');" class="pop">controlli ActiveX</A> (precedentemente denominati controlli OLE o controlli personalizzati) impostati nella versione 2.0, può essere necessario inserire la parola chiave <A HREF="JavaScript:hhobj_12.Click()"><B>ByVal</B></A> prima degli argomenti passati alle routine evento chiamate dagli eventi controllo ActiveX, come illustrato nel seguente esempio:</P>

<PRE class=CT><CODE>Sub CambiaMese_Click(ByVal intAnnoCorrente As Integer)</CODE></PRE>



<P class=T>Per determinare se un argomento deve essere passato in base al valore, scegliere <B>Compila tutti i moduli</B> dal menu <B>Debug</B> in visualizzazione Struttura del modulo. Se viene restituito il messaggio di errore "La dichiarazione della routine di eventi non corrisponde alla descrizione dell'evento con lo stesso nome", è necessario inserire la parola chiave <B>ByVal</B> prima dell'argomento.</P>

<P class=T>Grazie al miglioramento del controllo dei tipi di argomenti in Microsoft Access 2000, nelle nuove routine evento create per i controlli ActiveX la parola chiave <B>ByVal</B> viene inserita automaticamente quando necessario.</P>

<P class=RL><B>Chiamata delle routine nei moduli di maschere e report</B></P>

<P class=T>Nelle versioni 1.<I>x</I> e 2.0 di Microsoft Access non è possibile chiamare una routine definita in una maschera o in un report dall'esterno del modulo della maschera o del report. In Microsoft Access 2000 è invece possibile chiamare una routine pubblica nel modulo di una maschera o di un report da qualsiasi routine del database corrente. È necessario qualificare la routine con il <A HREF="javascript:HelpPopup('actip9.hlp','defClassName');" class="pop">nome di classe</A> del modulo della maschera o del report. Per chiamare ad esempio una routine denominata VisualizzaMessaggio definita nel modulo della maschera Ordini è necessario utilizzare la seguente sintassi:</P>

<PRE class=CT><CODE>Form_Ordini.VisualizzaMessaggio</CODE></PRE>



<P class=T>È consigliabile posizionare le routine che si intende chiamare dall'esterno di una maschera o di un report in un <A HREF="javascript:HelpPopup('actip9.hlp','defStandardModule');" class="pop">modulo standard</A> se possibile, piuttosto che nel modulo di una maschera o di un report.</P>

<P class=RL><B>Riferimenti a moduli, report e controlli nella finestra Debug</B></P>

<P class=T>Quando si eseguono operazioni di test e debug del codice, è necessario qualificare in modo completo tutti i riferimenti agli oggetti utilizzati nella <A HREF="javascript:HelpPopup('actip9.hlp','defDebugWindow');" class="pop">finestra Debug</A>, a meno che l'esecuzione non sia stata sospesa nel modulo di una maschera o di un report. Nel <A HREF="javascript:HelpPopup('actip9.hlp','defImmediateWindow');" class="pop">riquadro Immediata</A> della finestra Debug è pertanto necessario utilizzare il codice <CODE>Forms!Categorie!IDCategoria</CODE> e non soltanto <CODE>IDCategoria</CODE> per fare riferimento al controllo IDCategoria della maschera Categorie in visualizzazione Maschera, anche quando la maschera Categorie è quella corrente.</P>

<P class=T>Non è inoltre possibile utilizzare la parola chiave <A HREF="JavaScript:hhobj_13.Click()"><B>Me</B></A> nella finestra Debug per fare riferimento a un oggetto di una maschera o di un report per cui sia stata attivata la visualizzazione Struttura, a meno che non sia stata sospesa l'esecuzione del codice nella maschera o nel report.</P>

<P class=RL><B>Conversione di maschere e report contenenti controlli ActiveX</B></P>

<P class=T>Quando si converte un database di Microsoft Access 2.0 per utilizzarlo in Microsoft Access 2000 (versione 9.0), i controlli ActiveX delle maschere e dei report possono non essere convertiti automaticamente. Microsoft Access 2.0 supporta i controlli OLE a 16 bit, mentre la versione 9.0 supporta solo i controlli ActiveX a 32 bit.</P>

<P class=T>Se si converte un database che contiene una maschera o un report con una versione a 16 bit di un controllo ActiveX e non si dispone di una versione a 32 bit, viene generato un messaggio di errore. È necessario disporre di una versione a 32 bit di ciascun controllo ActiveX che si desidera aggiornare e registrarla nel registro di sistema. A questo punto si può salvare la maschera o il report nel database convertito, quindi chiudere e riaprire il database.</P>

<P class=RL><B>Abilitazione di un database creato con una versione precedente di Microsoft Access</B></P>

<P class=T>Quando si <A HREF="javascript:HelpPopup('actip9.hlp','defEnabledDatabase');" class="pop">abilita</A> un database di grandi dimensioni creato con la versione 1.<I>x</I> o 2.0 di Microsoft Access senza convertirlo in Microsoft Access 2000, può essere necessario aumentare le dimensioni massime predefinite del buffer. Per modificare questa impostazione, aprire il registro di sistema e ricercare la sottochiave \HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Jet\3.0\Engines\Jet 2.x. Creare una nuova sottochiave denominata ISAM e al suo interno creare un nuovo valore DWORD denominato MaxBufferSize. Impostare questo valore a 1024, base decimale. Per ulteriori informazioni su come modificare il registro, vedere la documentazione di Microsoft Windows.</P>

<P class=RL><B>Ridenominazione di un database</B></P>

<P class=T>Quando si rinomina un database, il relativo codice viene decompilato e poi nuovamente compilato. Per ricompilare il codice e salvare tutti i moduli nello stato compilato, aprire il database, quindi aprire un modulo in visualizzazione Struttura e infine scegliere <B>Compila e salva tutti i moduli</B> dal menu <B>Debug</B>.</P>

<P class=RL><B>Valori temporali nei criteri delle query</B></P>

<P class=T>Quando si converte un database della versione 1.<I>x</I> o 2.0 in Microsoft Access 2000, le query che contengono criteri basati su valori temporali specificati nei campi Data/ora possono restituire dei risultati diversi rispetto alle versioni precedenti. Questa situazione può verificarsi anche quando si <A HREF="javascript:HelpPopup('actip9.hlp','defAttachLink');" class="pop">collegano</A> le tabelle di un database della versione 1.<I>x</I> o 2.0 a un database di Microsoft Access 2000. Questa condizione ha effetto soltanto sul valore temporale nei campi Data/ora.</P>

<P class=RL><B>Funzioni Visual Basic non supportate nelle espressioni</B></P>

<P class=T>Le sei funzioni Visual Basic descritte di seguito non possono essere utilizzate nelle espressioni al di fuori di una routine <B>Sub</B> o <B>Function</B> definita dall'utente:</P>



<TABLE cellpadding=4 cellspacing=4 cols=2>

<TR VALIGN="top">
<TD class=LMC width=49%><A HREF="JavaScript:hhobj_14.Click()"><B>EOF</B></A></TD>
<TD class=LMC width=51%><A HREF="JavaScript:hhobj_15.Click()"><B>Loc</B></A></TD>
</TR>

<TR VALIGN="top">
<TD class=LMC width=49%><A HREF="JavaScript:hhobj_16.Click()"><B>FileAttr</B></A></TD>
<TD class=LMC width=51%><A HREF="JavaScript:hhobj_17.Click()"><B>LOF</B></A></TD>
</TR>

<TR VALIGN="top">
<TD class=LMC width=49%><A HREF="JavaScript:hhobj_18.Click()"><B>FreeFile</B></A></TD>
<TD class=LMC width=51%><A HREF="JavaScript:hhobj_19.Click()"><B>Seek</B></A></TD>
</TR>
</TABLE><BR>



<P class=T>Per utilizzare una di queste funzioni in un'espressione esterna a una routine, è possibile chiamarla dall'interno di una funzione definita dall'utente chiamata dall'espressione.</P>

<P class=RL><B>Numeri di riga nelle routine Visual Basic</B></P>

<P class=T>Non è possibile assegnare numeri di riga superiori a 65.529 alle istruzioni delle routine Visual Basic. Se l'applicazione di Microsoft Access versione 1.<I>x</I> o 2.0 convertita contiene numeri di riga superiori a tale valore, è necessario modificarli affinché rientrino nell'intervallo consentito.</P>

<P class=RL><B>Pulsanti Routine successiva e Routine precedente</B></P>

<P class=T>I pulsanti <B>Routine successiva</B> e <B>Routine precedente</B> presenti sulla <A HREF="javascript:HelpPopup('actip9.hlp','defToolBar');" class="pop">barra degli strumenti</A> <B>Modulo</B> nelle versioni 1.<I>x</I> e 2.0 non sono più disponibili in Microsoft Access 2000. Se si converte un database della versione 1.<I>x</I> o 2.0 con una barra degli strumenti personalizzata contenente uno di questi pulsanti, non verrà restituito alcun messaggio di errore, ma i pulsanti non funzioneranno quando si farà clic su di essi.</P>

<P class=RL><B>Errore "Memoria insufficiente" visualizzato durante la conversione di database di grandi dimensioni</B></P>

<P class=T>Visual Basic, Applications Edition limita a 1.082 il numero di moduli per database e le maschere e i report contengono ognuno un modulo. Per risolvere questo problema è necessario ridurre il numero di oggetti nel database o suddividere l'applicazione in più database. Se si dispone di moduli contenenti grandi quantità di codice, è consigliabile utilizzare i <A HREF="javascript:HelpPopup('actip9.hlp','defLibraryDatabase');" class="pop">database di libreria</A> per memorizzarlo.</P>

<P class=RL><B>Formattazione dei valori Null e delle stringhe a lunghezza zero</B></P>

<P class=T>Nella versione 2.0 di Microsoft Access è possibile utilizzare la funzione <A HREF="JavaScript:hhobj_20.Click()"><B>Format</B></A> per restituire un valore per una <A HREF="javascript:HelpPopup('actip9.hlp','defZeroLengthString');" class="pop">stringa a lunghezza zero</A> e un altro per un valore <A HREF="javascript:HelpPopup('actip9.hlp','defNull');" class="pop"><B>Null</B></A>. Allo stesso modo è possibile utilizzare la proprietà <A HREF="acproFormat.htm"><B>Format</B></A> per formattare automaticamente i campi in <A HREF="javascript:HelpPopup('actip9.hlp','defDatasheetView');" class="pop">visualizzazione Foglio dati</A> della tabella o i controlli di una maschera o di un report. È possibile ad esempio utilizzare un'espressione di formato come quella riportata di seguito con la funzione <B>Format</B> perché venga restituito il valore di stringa appropriato dal codice:</P>

<PRE class=CT><CODE>Dim var As Variant, strX As String
' Assegnare un valore a strX e passare alla funzione Format.
var = Format(strX, "@;ZLS;Null")</CODE></PRE>



<P class=T>In Microsoft Access 2000 è necessario eseguire un test separato per il valore <B>Null</B>, quindi restituire il valore appropriato in base al risultato. È possibile ad esempio utilizzare la funzione <A HREF="JavaScript:hhobj_21.Click()"><B>IIf</B></A> in un'espressione con la funzione <B>Format</B>, come nel seguente esempio:</P>

<PRE class=CT><CODE>var = IIf(IsNull(strX),"Null", Format(strX, "@;ZLS"))</CODE></PRE>



<P class=T>Questa modifica si applica solo quando si utilizza la funzione <B>Format</B> per formattare un valore a seconda che sia una stringa a lunghezza zero o un valore <B>Null</B>. Il funzionamento delle altre espressioni di formato utilizzate con la funzione <B>Format</B> non è stato modificato rispetto alle versioni precedenti.</P>

<P class=T>Se si converte un database dalla versione 2.0 di Microsoft Access in Microsoft Access 2000, è necessario modificare il codice o le impostazioni delle proprietà per utilizzare questi metodi. Non è possibile utilizzare la proprietà <B>Formato</B> in visualizzazione Foglio dati della tabella per distinguere i valori <B>Null</B> e le stringhe a lunghezza zero.</P>


<P>
<OBJECT ID="hhobj_AR" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM NAME="Command" VALUE="ALink">
<PARAM NAME="Font" VALUE="Verdana,8,1">
<PARAM NAME="Text" VALUE="Text:Risorse aggiuntive">
<PARAM NAME="Flags" VALUE=",,1">
<PARAM NAME="Item1" VALUE="">
<PARAM NAME="Item2" VALUE="acconConvertingAccessBasicCodeToVisualBasicW">
</OBJECT>
</P>
<SCRIPT language="VBScript" src="ShowMe_Code.vbs"></SCRIPT>
<SCRIPT language="VBSCRIPT">
Sub HelpPopup(sFile,sID)
L_SecurityT1_ErrorMessage="Impossibile visualizzare la procedura per la presenza di impostazioni di protezione "
L_SecurityT2_ErrorMessage="del browser troppo restrittive o per l'errata installazione del controllo ActiveX "
L_SecurityT3_ErrorMessage="Ouactrl.ocx."
L_SecurityE1_ErrorMessage="- Impostare un livello inferiore di protezione del browser"
L_SecurityE2_ErrorMessage="- Se questo messaggio viene visualizzato dopo l'impostazione di un livello inferiore,"
L_SecurityE3_ErrorMessage="  rivolgersi all'amministratore di sistema per la verifica dell'installazione del controllo"
L_SecurityE4_ErrorMessage="  ActiveX Ouactrl.ocx, posto nella cartella in cui è installato Microsoft Office"
sSecurityMSG=L_SecurityT1_ErrorMessage & chr(13) & L_SecurityT2_ErrorMessage & chr(13) & L_SecurityT3_ErrorMessage & chr(13) & chr(13) & L_SecurityE1_ErrorMessage & chr(13) & L_SecurityE2_ErrorMessage & chr(13) & L_SecurityE3_ErrorMessage & chr(13) & L_SecurityE4_ErrorMessage
L_App_DialogTitle="Guida di Microsoft Office"
On Error Resume Next
r=oua.HelpPopup(sFile,sID)
If Err<>0 Then Msgbox sSecurityMSG,48,L_App_DialogTitle
End Sub
</SCRIPT>
</BODY>
</HTML>
