<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN">
<HTML>
<HEAD>
<META Version='2' >
<META App='Access'
Project='acmain9.chm'
FileName='acstmDimS'
Feature='acstm'
Handoff='1'
SourceFile='acobdecl.rtf'
Tnum='234405'
Piece='1043'
Recycle='N'
>

<OBJECT ID="oua" WIDTH="0" HEIGHT="0"
   CLASSID="CLSID:8936033C-4A50-11D1-98A4-00A0C90F27C6">
</OBJECT>

<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Istruzione Dim</TITLE>
<style>@import url(/Office.css);</style>
<link disabled rel="stylesheet" type="text/css" href="/MSOffice.css"></HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">



<H1 class=RH1><A NAME="acstmdims"></A>Istruzione Dim</H1>



<P class=T>È possibile utilizzare la parola chiave <B>New</B> con l'istruzione <B>Dim</B> per dichiarare una variabile di oggetto di un determinato tipo. Se si include nella dichiarazione della variabile la parola chiave <B>New</B>, viene creato un nuovo oggetto a cui la variabile punta automaticamente. In tal caso, non è necessario utilizzare l'istruzione <B>Set</B>.</P>

<P class=T>Utilizzando la parola chiave <B>New</B> è possibile creare una variabile di oggetto per puntare a qualsiasi tipo di oggetto. La parola chiave <B>New</B> viene utilizzata generalmente per creare una nuova istanza di una classe oppure per creare un nuovo oggetto <B>Collection</B>, come mostrato nell'esempio riportato di seguito:</P>

<PRE class=CT><CODE>' Crea variabile di oggetto e punta la variabile al nuovo oggetto.
Dim colIstanze As New Collection</CODE></PRE>



<P class=T>Nell'esempio riportato di seguito si indica come utilizzare la parola chiave <B>New</B> per creare una nuova istanza di una classe.</P>

<PRE class=CT><CODE>' Crea nuova istanza di modulo di classe.
Dim obj As New Class1</CODE></PRE>



<P class=T>È possibile utilizzare la parola chiave <B>New</B> per creare un nuovo oggetto di Microsoft Access da alcuni componenti che supportano l'<A HREF="javascript:HelpPopup('actip9.hlp','defOLEAutomation');" class="pop">automazione</A>, precedentemente definita automazione OLE. Per determinare se il componente supporta la sintassi riportata di seguito, consultare la relativa documentazione.</P>

<P class=T>Da un altro componente, ad esempio, supponendo di aver stabilito un riferimento con la <A HREF="javascript:HelpPopup('actip9.hlp','defTypeLibrary');" class="pop">libreria di tipi</A> di Microsoft Access, è possibile creare un nuovo oggetto <B>Application</B> di Microsoft Access utilizzando il codice riportato di seguito:</P>

<PRE class=CT><CODE>Dim appAccess As New Access.Application</CODE></PRE>


<SCRIPT language="VBScript" src="ShowMe_Code.vbs"></SCRIPT>
<SCRIPT language="VBSCRIPT">
Sub HelpPopup(sFile,sID)
L_SecurityT1_ErrorMessage="Impossibile visualizzare la procedura per la presenza di impostazioni di protezione "
L_SecurityT2_ErrorMessage="del browser troppo restrittive o per l'errata installazione del controllo ActiveX "
L_SecurityT3_ErrorMessage="Ouactrl.ocx."
L_SecurityE1_ErrorMessage="- Impostare un livello inferiore di protezione del browser"
L_SecurityE2_ErrorMessage="- Se questo messaggio viene visualizzato dopo l'impostazione di un livello inferiore,"
L_SecurityE3_ErrorMessage="  rivolgersi all'amministratore di sistema per la verifica dell'installazione del controllo"
L_SecurityE4_ErrorMessage="  ActiveX Ouactrl.ocx, posto nella cartella in cui è installato Microsoft Office"
sSecurityMSG=L_SecurityT1_ErrorMessage & chr(13) & L_SecurityT2_ErrorMessage & chr(13) & L_SecurityT3_ErrorMessage & chr(13) & chr(13) & L_SecurityE1_ErrorMessage & chr(13) & L_SecurityE2_ErrorMessage & chr(13) & L_SecurityE3_ErrorMessage & chr(13) & L_SecurityE4_ErrorMessage
L_App_DialogTitle="Guida di Microsoft Office"
On Error Resume Next
r=oua.HelpPopup(sFile,sID)
If Err<>0 Then Msgbox sSecurityMSG,48,L_App_DialogTitle
End Sub
</SCRIPT>
</BODY>
</HTML>
