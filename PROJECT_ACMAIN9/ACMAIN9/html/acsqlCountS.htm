<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN">
<HTML>
<HEAD>
<META Version='2' >
<META App='Access'
Project='acmain9.chm'
FileName='acsqlCountS'
Feature='acfct'
Handoff='1'
SourceFile='acdsql04_1.rtf'
Tnum='234366'
Piece='1039'
Recycle='Y'
>

<OBJECT ID="oua" WIDTH="0" HEIGHT="0"
   CLASSID="CLSID:8936033C-4A50-11D1-98A4-00A0C90F27C6">
</OBJECT>

<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Funzione Conteggio</TITLE>
<style>@import url(/Office.css);</style>
<link disabled rel="stylesheet" type="text/css" href="/MSOffice.css"></HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">



<H1 class=RH1><A NAME="acsqlcounts"></A>Funzione Conteggio</H1>



<P class=T>In Microsoft Access, Ë possibile utilizzare la funzione <B>Conteggio</B> nella <A HREF="javascript:HelpPopup('actip9.hlp','defQBEGrid');" class="pop">griglia di struttura della query</A>, in un'istruzione <A HREF="javascript:HelpPopup('actip9.hlp','defSQL');" class="pop">SQL</A> in <A HREF="javascript:HelpPopup('actip9.hlp','defSQLView');" class="pop">visualizzazione SQL</A> della <A HREF="javascript:HelpPopup('actip9.hlp','defQueryWindow');" class="pop">finestra Query</A> o in un'istruzione SQL all'interno del codice di Visual Basic. » inoltre possibile utilizzare la funzione <B>Conteggio</B> in un <A HREF="javascript:HelpPopup('actip9.hlp','defCalculatedControl');" class="pop">controllo calcolato</A> di una maschera o di un report.</P>

<P class=T>La funzione <B>Conteggio</B> risulta particolarmente utile nelle <A HREF="javascript:HelpPopup('actip9.hlp','defTotalsQuery');" class="pop">query Totali</A> e nelle <A HREF="javascript:HelpPopup('actip9.hlp','defCrosstabQuery');" class="pop">query a campi incrociati</A>. La funzione agisce nello stesso modo sia che venga creata una query nella griglia di struttura di query o come un'istruzione SQL in visualizzazione SQL.</P>

<P class=T>Nella griglia di struttura della query, Ë possibile creare una nuova query Totali facendo clic sul pulsante <B>Totali</B> <A HREF="javascript:HelpPopup('actip9.hlp','actbrTotalsQ');" class="pop"><IMG SRC="images/totals.bmp" BORDER=0></A>  sulla <A HREF="javascript:HelpPopup('actip9.hlp','defToolBar');" class="pop">barra degli strumenti</A> <B>Struttura query</B>. La riga <B>Formula</B> viene quindi inserita nella griglia. » possibile impostare alla funzione di aggregazione la cella <B>Formula</B> sottostante un campo in modo che venga eseguita sui dati di tale campo.</P>

<P class=T>Per contare pi˘ rapidamente tutti i record di una query, utilizzare la funzione <B>Conteggio(*)</B>, che puÚ essere utilizzata in un <A HREF="javascript:HelpPopup('actip9.hlp','defCalculatedField');" class="pop">campo calcolato</A> di una query.</P>

<P class=T>Si supponga, ad esempio, di disporre di una tabella Ordini contenente sia un campo IDOrdine che un campo Citt‡Destinatario. » possibile creare una query che visualizzi il numero di ordini inviati a ciascuna citt‡. Creare una nuova query Totali e trascinare il campo Citt‡Destinatario sulla griglia di struttura della query. Impostare a Raggruppamento la cella <B>Formula</B> sottostante il campo Citt‡Destinatario.</P>

<P class=T>Creare quindi un campo calcolato, digitando nella nuova cella <B>Campo</B> l'espressione riportata di seguito:</P>

<PRE class=CT><CODE>ConteggioOrdini: <B>Conteggio(</B>*<B>)</B></CODE></PRE>



<P class=T>Impostare a Espressione la cella <B>Formula</B> sottostante tale campo. Quando si esegue la query, viene visualizzato il numero di ordini inviati in ciascuna citt‡.</P>

<P class=T>» possibile visualizzare l'istruzione SQL relativa a questa query passando alla visualizzazione SQL. Nell'esempio riportato di seguito si crea la seguente istruzione SQL:</P>

<PRE class=CT><CODE>SELECT Citt‡Destinatario, <B>Conteggio(</B>*<B>)</B> AS ConteggioOrdini
FROM Ordini GROUP BY Citt‡Destinatario;</CODE></PRE>



<P class=T>» possibile ottenere gli stessi risultati trascinando il campo IDOrdine sulla griglia di struttura della query e scegliendo <B>Conteggio</B> nella cella <B>Formula</B> sottostante. Tale query Ë poco pi˘ lenta di quella che utilizza la funzione <B>Conteggio(*)</B>. Si noti la differenza tra l'istruzione SQL riportata di seguito e la precedente:</P>

<PRE class=CT><CODE>SELECT Citt‡Destinatario, <B>Conteggio(</B>IDOrdine<B>)</B> AS ConteggioOrdini FROM Ordini GROUP BY Citt‡Destinatario;</CODE></PRE>



<P class=T>» inoltre possibile utilizzare un'istruzione SQL all'interno del codice di Visual Basic. La routine riportata di seguito, ad esempio, crea un oggetto <B>Recordset</B> di tipo dynaset dalla istruzione SQL pi˘ veloce tra le due precedenti:</P>

<PRE class=CT><CODE>Sub ConteggioOrdini()
&nbsp;&nbsp;&nbsp; Dim dbs As Database, rst As Recordset, strSQL AS String
&nbsp;&nbsp;&nbsp; Set dbs = CurrentDb
&nbsp;&nbsp;&nbsp; strSQL = "SELECT Citt‡Destinatario, <B>Conteggio(</B>*<B>)</B> _
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AS ConteggioOrdini FROM Orders " _
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; "GROUP BY Citt‡Destinatario;"
&nbsp;&nbsp;&nbsp; Set rst = dbs.OpenRecordset(strSQL)
&nbsp;&nbsp;&nbsp; rst.MoveLast
&nbsp;&nbsp;&nbsp; Debug.Print rst.RecordCount
&nbsp;&nbsp;&nbsp; Set dbs = Nothing
End Sub</CODE></PRE>



<P class=T>Per utilizzare la funzione <B>Conteggio</B> in un controllo calcolato, impostare la propriet‡ <B>Origine controllo</B> ad un'espressione contenente la funzione <B>Conteggio</B>. Per visualizzare, ad esempio, il numero di ordini di un set di ordini contenuto in una casella di testo, immettere nella propriet‡ <B>Origine controllo</B> della casella di testo l'espressione riportata di seguito:</P>

<PRE class=CT><CODE>=<B>Conteggio(</B>[IDOrdine]<B>)</B></CODE></PRE>



<P class=T>Se la funzione <B>Conteggio</B> viene utilizzata in un controllo calcolato, Ë possibile limitare il set di record rispetto al quale viene eseguita la funzione, impostando la propriet‡ <B>Filtro</B> della maschera.</P>
<SCRIPT language="VBScript" src="ShowMe_Code.vbs"></SCRIPT>
<SCRIPT language="VBSCRIPT">
Sub HelpPopup(sFile,sID)
L_SecurityT1_ErrorMessage="Impossibile visualizzare la procedura per la presenza di impostazioni di protezione "
L_SecurityT2_ErrorMessage="del browser troppo restrittive o per l'errata installazione del controllo ActiveX "
L_SecurityT3_ErrorMessage="Ouactrl.ocx."
L_SecurityE1_ErrorMessage="- Impostare un livello inferiore di protezione del browser"
L_SecurityE2_ErrorMessage="- Se questo messaggio viene visualizzato dopo l'impostazione di un livello inferiore,"
L_SecurityE3_ErrorMessage="  rivolgersi all'amministratore di sistema per la verifica dell'installazione del controllo"
L_SecurityE4_ErrorMessage="  ActiveX Ouactrl.ocx, posto nella cartella in cui Ë installato Microsoft Office"
sSecurityMSG=L_SecurityT1_ErrorMessage & chr(13) & L_SecurityT2_ErrorMessage & chr(13) & L_SecurityT3_ErrorMessage & chr(13) & chr(13) & L_SecurityE1_ErrorMessage & chr(13) & L_SecurityE2_ErrorMessage & chr(13) & L_SecurityE3_ErrorMessage & chr(13) & L_SecurityE4_ErrorMessage
L_App_DialogTitle="Guida di Microsoft Office"
On Error Resume Next
r=oua.HelpPopup(sFile,sID)
If Err<>0 Then Msgbox sSecurityMSG,48,L_App_DialogTitle
End Sub
</SCRIPT>
</BODY>
</HTML>
