<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN">
<HTML>
<HEAD>
<META Version='1' >
<META App='Access'
Project='acmain9.chm'
FileName='acconWhatIsProcedure'
Feature='Modules: Basics'
Handoff='3'
SourceFile='cmodbas.rtf'
Tnum='186948'
Piece='1042'
Recycle='N'
>

<OBJECT ID="oua" WIDTH="0" HEIGHT="0"
   CLASSID="CLSID:8936033C-4A50-11D1-98A4-00A0C90F27C6">
</OBJECT>

<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Definizione di routine</TITLE>
<style>@import url(/Office.css);</style>
<link disabled rel="stylesheet" type="text/css" href="/MSOffice.css"></HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">



<H1><A NAME="acconwhatisprocedure"></A>Definizione di routine</H1>

<P class=T>Per routine si intende un'unità di codice <A HREF="javascript:HelpPopup('actip9.hlp','IDH_acdefVisualBasic');" class="pop">Visual Basic</A> contenente una serie di <A HREF="javascript:HelpPopup('actip9.hlp','defStatement');" class="pop">istruzioni </A>e <A HREF="javascript:HelpPopup('actip9.hlp','defMethod');" class="pop">metodi</A> per l'esecuzione di operazioni o per il calcolo di valori. La <A HREF="javascript:HelpPopup('actip9.hlp','defEventProcedure');" class="pop">routine evento</A> che segue ad esempio utilizza il metodo <B>OpenForm</B> per aprire la maschera Ordini:</P>

<PRE class=CT><CODE>Private Sub ApriOrdini_Click()

&nbsp;&nbsp;&nbsp; DoCmd.OpenForm "Ordini"

End Sub
</CODE></PRE>

<P class=T>Esistono due tipi di routine:

<UL>
	<LI class=LB1>Le routine <B>Sub</B> eseguono un'operazione o una serie di operazioni, ma non restituiscono alcun valore. È possibile creare routine <B>Sub</B> personalizzate oppure utilizzare i modelli di routine evento creati da Microsoft Access.
<P class=LT1>Ogni maschera e ogni report del database dispone di un <A HREF="javascript:HelpPopup('actip9.hlp','defFormModule');" class="pop">modulo della maschera</A> o di un <A HREF="javascript:HelpPopup('actip9.hlp','defReportModule');" class="pop">modulo del report</A> incorporato contenente modelli di routine evento. È possibile aggiungere del codice che viene eseguito in risposta a eventi che si verificano relativamente alla maschera, al report o ai controlli della maschera o del report. Quando Microsoft Access riconosce che per una maschera, un report o un controllo si è verificato un evento, esegue automaticamente la routine evento indicata per l'oggetto e per l'evento. È possibile ad esempio scrivere una routine evento che attivi una casella di testo Nome coniuge quando l'utente seleziona la casella di controllo Stato civile.

<P class=LT1><B>Suggerimento</B>&nbsp;&nbsp; Molte procedure guidate che creano oggetti, ad esempio la Creazione guidata Pulsante di Comando, generano contemporaneamente anche delle routine evento per l'oggetto. È possibile osservare queste routine evento per esaminare esempi di funzionamento delle routine.
</LI>

	<LI class=LB1>Le routine <B>Function</B>, spesso chiamate solo funzioni, restituiscono un valore, ad esempio il risultato di un calcolo. In Visual Basic sono incluse molte funzioni incorporate, ad esempio la funzione <B>Now</B> restituisce data e ora correnti. Oltre a queste funzioni incorporate, è possibile creare funzioni personalizzate.
<P class=LT1>Dato che le funzioni restituiscono dei valori, è possibile utilizzarle nelle <A HREF="javascript:HelpPopup('actip9.hlp','defExpression');" class="pop">espressioni</A>. In Microsoft Access in molti casi è possibile utilizzare delle funzioni nelle espressioni, ad esempio nelle istruzioni o nei metodi di Visual Basic, in molte impostazioni delle proprietà o in espressioni stringa in un filtro o in una query.

<P class=4>
</LI>
</UL>

<P class=T>Di seguito viene riportato un esempio di routine <B>Function</B>, PrimoDelMeseSuccessivo, che restituisce la data del primo giorno del mese successivo alla data corrente.</P>

<PRE class=CT><CODE>Function PrimoDelMeseSuccessivo()

&nbsp;&nbsp;&nbsp; PrimoDelMeseSuccessivo = _
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DateSerial(Year(Now), Month(Now) + 1, 1)

End Function
</CODE></PRE>

<P class=T>Questa funzione personalizzata è costituita da una sola istruzione di assegnazione che assegna i risultati dell'espressione, a destra del simbolo di uguale [=], al nome della funzione, cioè PrimoDelMeseSuccessivo, a sinistra del simbolo di uguale. Il risultato viene quindi calcolato utilizzando le funzioni incorporate di Visual Basic <B>DateSerial</B>, <B>Year</B>, <B>Now</B> e <B>Month</B>.</P>

<P class=T>Una volta creata questa funzione, è possibile utilizzarla in un'espressione in tutto Microsoft Access. È possibile ad esempio specificare che in una casella di testo venga visualizzato come valore predefinito il primo giorno del mese successivo alla data corrente, impostando nella finestra delle proprietà la proprietà <B>Valore predefinito</B> del controllo Casella di testo all'espressione riportata di seguito:</P>

<PRE class=CT><CODE>= PrimoDelMeseSuccessivo()
</CODE></PRE>

<P class=NT><B>Nota</B>&nbsp;&nbsp; Per utilizzare una funzione come impostazione della proprietà è necessario che tale funzione sia inclusa nel modulo della maschera o del report o in un <A HREF="javascript:HelpPopup('actip9.hlp','defStandardModule');" class="pop">modulo standard</A>. Non è consentito utilizzare una funzione in un <A HREF="javascript:HelpPopup('actip9.hlp','defClassModule');" class="pop">modulo di classe</A> che, in base all'impostazione della proprietà di una maschera o report, non è associato a una maschera o a un report.</P>

<P class=T>Sia le routine <B>Sub</B> che le routine <B>Function</B> possono accettare <A HREF="javascript:HelpPopup('actip9.hlp','defArgument');" class="pop">argomenti</A>. Per ulteriori informazioni sull'utilizzo degli argomenti in Visual Basic, fare clic su <A HREF="acdecUseArgumentsVBS.htm"><IMG SRC="images/chiclet.bmp" BORDER=0></A>.</P>


<P>
<OBJECT ID="hhobj_AR" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM NAME="Command" VALUE="ALink">
<PARAM NAME="Font" VALUE="Verdana,8,1">
<PARAM NAME="Text" VALUE="Text:Risorse aggiuntive">
<PARAM NAME="Flags" VALUE=",,1">
<PARAM NAME="Item1" VALUE="">
<PARAM NAME="Item2" VALUE="acconWhatIsProcedureW">
</OBJECT>
</P>
<SCRIPT language="VBScript" src="ShowMe_Code.vbs"></SCRIPT>
<SCRIPT language="VBSCRIPT">
Sub HelpPopup(sFile,sID)
L_SecurityT1_ErrorMessage="Impossibile visualizzare la procedura per la presenza di impostazioni di protezione "
L_SecurityT2_ErrorMessage="del browser troppo restrittive o per l'errata installazione del controllo ActiveX "
L_SecurityT3_ErrorMessage="Ouactrl.ocx."
L_SecurityE1_ErrorMessage="- Impostare un livello inferiore di protezione del browser"
L_SecurityE2_ErrorMessage="- Se questo messaggio viene visualizzato dopo l'impostazione di un livello inferiore,"
L_SecurityE3_ErrorMessage="  rivolgersi all'amministratore di sistema per la verifica dell'installazione del controllo"
L_SecurityE4_ErrorMessage="  ActiveX Ouactrl.ocx, posto nella cartella in cui è installato Microsoft Office"
sSecurityMSG=L_SecurityT1_ErrorMessage & chr(13) & L_SecurityT2_ErrorMessage & chr(13) & L_SecurityT3_ErrorMessage & chr(13) & chr(13) & L_SecurityE1_ErrorMessage & chr(13) & L_SecurityE2_ErrorMessage & chr(13) & L_SecurityE3_ErrorMessage & chr(13) & L_SecurityE4_ErrorMessage
L_App_DialogTitle="Guida di Microsoft Office"
On Error Resume Next
r=oua.HelpPopup(sFile,sID)
If Err<>0 Then Msgbox sSecurityMSG,48,L_App_DialogTitle
End Sub
</SCRIPT>
</BODY>
</HTML>
