<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN">
<HTML>
<HEAD>
<META Version='2' >
<META App='Access'
Project='acmain9.chm'
FileName='acconNamingConflictsS'
Feature='accon'
Handoff='1'
SourceFile='acobcons.rtf'
Tnum='234333'
Piece='1043'
Recycle='N'
>

<OBJECT ID="oua" WIDTH="0" HEIGHT="0"
   CLASSID="CLSID:8936033C-4A50-11D1-98A4-00A0C90F27C6">
</OBJECT>

<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Evitare i conflitti nell'assegnazione dei nomi</TITLE>
<style>@import url(/Office.css);</style>
<link disabled rel="stylesheet" type="text/css" href="/MSOffice.css"></HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">



<H1 class=RH1><A NAME="acconnamingconflictss"></A>Evitare i conflitti nell'assegnazione dei nomi</H1>



<P class=T>Di seguito vengono forniti altri errori di conflitto nell'assegnazione dei nomi che è possibile rilevare in Microsoft Access.</P>

<P class=RL><B>Routine e variabili in moduli standard e in moduli di classe</B></P>

<P class=T>In Microsoft Access, se un modulo standard e un <A HREF="javascript:HelpPopup('actip9.hlp','defClassModule');" class="pop">modulo di classe</A> contengono entrambi una routine pubblica con lo stesso nome, un riferimento non qualificato alla routine chiamerà sempre quella residente nel modulo standard. Per chiamare una routine in un modulo di classe è necessario qualificarla con il <A HREF="javascript:HelpPopup('actip9.hlp','defClassName');" class="pop">nome di classe</A>. Tale regola è valida anche per le variabili con lo stesso nome definite nei moduli standard e di classe.</P>

<P class=T>Se ad esempio si dispone di una funzione chiamata NumeroOrdini nel modulo di una maschera chiamata Ordini, è possibile chiamare la funzione nel modo riportato di seguito:</P>

<PRE class=CT><CODE>Maschera_Ordini.NumeroOrdini</CODE></PRE>



<P class=RL><B>Variabili con lo stesso nome e con aree di validità differenti</B></P>

<P class=T>Se si dichiara una variabile a livello di modulo con lo stesso nome di una variabile a livello di routine in una routine del modulo, è necessario qualificare la variabile a livello di modulo con il nome del modulo. Questo vale per moduli standard e moduli di classe.</P>

<P class=T>È possibile ad esempio dichiarare una variabile <CODE>varValidità</CODE> a livello di modulo e di routine in un modulo standard chiamato Funzioni importanti e fare riferimento alla variabile a livello di modulo qualificandola come <CODE>[Funzioni importanti].varValidità</CODE>.</P>

<P class=T>È preferibile evitare di utilizzare variabili con lo stesso nome all'interno di un modulo.</P>

<P class=RL><B>Nomi di costanti, variabili e routine nei moduli di classe</B></P>

<P class=T>Non è possibile assegnare a una costante, una variabile o una routine di un modulo di report o di maschera lo stesso nome assegnato a un metodo o a una proprietà della maschera o del report. Se ad esempio si crea una routine di tipo <B>Sub</B> chiamata Nome si genera un errore di compilazione in quanto la maschera dispone già di una proprietà <B>Nome</B>.</P>
<SCRIPT language="VBScript" src="ShowMe_Code.vbs"></SCRIPT>
<SCRIPT language="VBSCRIPT">
Sub HelpPopup(sFile,sID)
L_SecurityT1_ErrorMessage="Impossibile visualizzare la procedura per la presenza di impostazioni di protezione "
L_SecurityT2_ErrorMessage="del browser troppo restrittive o per l'errata installazione del controllo ActiveX "
L_SecurityT3_ErrorMessage="Ouactrl.ocx."
L_SecurityE1_ErrorMessage="- Impostare un livello inferiore di protezione del browser"
L_SecurityE2_ErrorMessage="- Se questo messaggio viene visualizzato dopo l'impostazione di un livello inferiore,"
L_SecurityE3_ErrorMessage="  rivolgersi all'amministratore di sistema per la verifica dell'installazione del controllo"
L_SecurityE4_ErrorMessage="  ActiveX Ouactrl.ocx, posto nella cartella in cui è installato Microsoft Office"
sSecurityMSG=L_SecurityT1_ErrorMessage & chr(13) & L_SecurityT2_ErrorMessage & chr(13) & L_SecurityT3_ErrorMessage & chr(13) & chr(13) & L_SecurityE1_ErrorMessage & chr(13) & L_SecurityE2_ErrorMessage & chr(13) & L_SecurityE3_ErrorMessage & chr(13) & L_SecurityE4_ErrorMessage
L_App_DialogTitle="Guida di Microsoft Office"
On Error Resume Next
r=oua.HelpPopup(sFile,sID)
If Err<>0 Then Msgbox sSecurityMSG,48,L_App_DialogTitle
End Sub
</SCRIPT>
</BODY>
</HTML>
